{"ast":null,"code":"// src/api/apiService.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3000/api'\n});\n\n// Interceptor para adicionar o token em todas as requisições\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('Token anexado ao header:', config.headers.Authorization);\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Interceptor para lidar com respostas de erro 401\napi.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Remover token e redirecionar para login se o token for inválido ou expirado\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","console","log","error","Promise","reject","response","status","removeItem","window","location","href"],"sources":["/Users/wesdionisio/Documents/Dev/latest-beach-sports/frontend/src/api/apiService.js"],"sourcesContent":["// src/api/apiService.js\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n});\n\n// Interceptor para adicionar o token em todas as requisições\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n      console.log('Token anexado ao header:', config.headers.Authorization);\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Interceptor para lidar com respostas de erro 401\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      // Remover token e redirecionar para login se o token for inválido ou expirado\n      localStorage.removeItem('authToken');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;IAChDK,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEP,MAAM,CAACI,OAAO,CAACC,aAAa,CAAC;EACvE;EACA,OAAOL,MAAM;AACf,CAAC,EACAQ,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAd,GAAG,CAACG,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC1BY,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACAV,YAAY,CAACW,UAAU,CAAC,WAAW,CAAC;IACpCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}